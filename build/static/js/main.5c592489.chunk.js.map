{"version":3,"sources":["redux/contacts-actions.js","redux/contacts-reducers.js","redux/store.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","redux/contacts-selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","initialContacts","contactsActions","state","isNameExist","find","contact","toLowerCase","isNumberExist","alert","filter","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","LabelInput","styled","form","label","Input","input","Button","button","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","type","onChange","pattern","title","required","getVisibleContacts","allContacts","getContacts","normalizedFilter","getFilter","includes","Span","span","ContainerItems","ul","ContactItems","li","ContactList","useSelector","map","onClick","Filter","onBlur","Container","div","TitleH1","h1","TitleH2","h2","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c592489.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/addContact', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/deleteContact');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { deleteContact, addContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport contactsActions from './contacts-actions';\nimport initialContacts from '../data/initialContacts.json';\n\nconst items = createReducer(initialContacts, {\n  [contactsActions.addContact]: (state, { payload }) => {\n    const isNameExist = state.find(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    const isNumberExist = state.find(\n      contact => contact.number === payload.number,\n    );\n    if (isNameExist) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    if (isNumberExist) {\n      alert(`${payload.number} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contacts-reducers';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import styled from \"@emotion/styled\";\n\nexport const form = styled.form`\nflex-direction: column;\ndisplay: flex;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const LabelInput = styled.label`\ndisplay: flex;\nfont-weight: 700;\nfont-size: 17px;\nmargin:0 auto;\nflex-direction: column;\nwidth: 300px;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const Input = styled.input`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 1px 2px 3px rgb(85 42 85);\ndisplay: block;\nmargin: 0 auto;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\nmargin-top: 10px;\n  \n`\nexport const Label = styled.label`\ndisplay:flex;\nflexdiraction:column;\njustify-content: center;\ntext-align:centr;\n`","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LabelInput, Input, Button } from './ContactForm.styled';\nimport contactsActions from '../../redux/contacts-actions';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactsActions.addContact(name, number));\n    resetState();\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <LabelInput>Name</LabelInput>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <LabelInput>Number</LabelInput>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n}\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import styled from \"@emotion/styled\";\nexport const Span = styled.span`\nfont-weight: 500;\nfont-size: 17px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\n  \n`\n\nexport const ContainerItems = styled.ul`\nmargin-top: 40px;\npadding-right:40px;\n`\n\nexport const ContactItems = styled.li`\nlist-style:none;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\nalign-items: center;\nmargin-bottom:5px;\n`\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\n\nimport {\n  Span,\n  Button,\n  ContactItems,\n  ContainerItems,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getVisibleContacts);\n  return (\n    <ContainerItems>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItems key={id}>\n          <Span>{name}: </Span>\n          <Span>{number} </Span>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(contactsActions.deleteContact(id))}\n          >\n            Delete contact\n          </Button>\n        </ContactItems>\n      ))}\n    </ContainerItems>\n  );\n}\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\nimport contactsActions from '../../redux/contacts-actions';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <label>\n      <LabelInput>Find contact by name</LabelInput>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n        onBlur={e =>\n          dispatch(contactsActions.changeFilter((e.target.value = '')))\n        }\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nmargin: 20px;\n    margin: 20px;\n    background: linear-gradient(\n176deg\n, rgb(57 51 175), rgb(87, 66, 100));\n    padding: 10px;\n    width: 577px;\n    box-shadow: 3px 1px 10px rgb(24 24 24);\n    border-radius: 5px;\n    text-align: center;\n`\nexport const TitleH1 = styled.h1`\ncolor:#d0cfc5;\n`\n\nexport const TitleH2 = styled.h2`\nmargin-top:45px;\n`\n","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\n\nexport default function App() {\n  return (\n    <Container>\n      <TitleH1>Phonebook</TitleH1>\n      <ContactForm />\n      <TitleH2>Contacts</TitleH2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport './index.css';\nimport App from '../src/components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}